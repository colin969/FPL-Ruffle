name: Nightly Builds

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 * * *'

jobs:
  create-release:
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      date: ${{ steps.current_time_underscores.outputs.formattedTime }}
      activity_check: ${{ env.GHA_REPO_ALIVE }}

    steps:
    - name: Activity check
      run: |
        :
        # Based off https://github.community/t/trigger-workflow-if-there-is-commit-in-last-24-hours/17074/3
        curl -sL https://api.github.com/repos/$GITHUB_REPOSITORY/commits | jq -r '[.[]][0]' > $HOME/commit.json
        date="$(jq -r '.commit.committer.date' $HOME/commit.json)"
        timestamp=$(date --utc -d "$date" +%s)
        author="$(jq -r '.commit.committer.name' $HOME/commit.json)"
        url="$(jq -r '.html_url' $HOME/commit.json)"
        days=$(( ( $(date --utc +%s) - $timestamp ) / 86400 ))
        rm -f $HOME/commit.json
        echo "Repository activity : $timestamp $author $url"
        alive=0
        if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
           echo "[WARNING] Ignoring activity limits : workflow triggered manually"
           alive=1
        else
           if [ $days -lt 1 ]; then
              echo Repository active : $days days
              alive=1
           else
              echo "[WARNING] Repository not updated : event<${{ github.event_name }}> not allowed to modify stale repository"
           fi
        fi
        if [ $alive -eq 1 ]; then
           echo ::set-env name=GHA_REPO_ALIVE::true
        fi
      shell: bash
    
    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current_time_dashes
      with:
        format: YYYY-MM-DD

    - name: Get current time with underscores
      uses: 1466587594/get-current-time@v2
      id: current_time_underscores
      with:
        format: YYYY_MM_DD
        
    - name: Create release
      if: env.GHA_REPO_ALIVE == 'true'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: nightly-${{ steps.current_time_dashes.outputs.formattedTime }}
        release_name: Nightly ${{ steps.current_time_dashes.outputs.formattedTime }}
        prerelease: true  
  
  upload-release:
    runs-on: ubuntu-latest
    needs: create-release
    if: needs.create-release.outputs.activity_check == 'true'
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - run: npm install
    - run: npm run release
    
    - name: Package Release
      run: |
        mkdir FPL-Ruffle
        cp README.md FPL-Ruffle/README.md
        cp LICENSE.md FPL-Ruffle/LICENSE.md
        cp icon.png FPL-Ruffle/icon.png
        cp package.json FPL-Ruffle/package.json
        mv dist FPL-Ruffle/
        mv static FPL-Ruffle/
        7z a release.zip FPL-Ruffle

    - name: Upload Extension Zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./release.zip
        asset_name: fpl-ruffle-ext_nightly_${{ needs.create-release.outputs.date }}.zip
        asset_content_type: application/zip
          
